<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TLA+ Foundation</title><link>https://foundation.tlapl.us/index.html</link><description>Goals of the Foundation The TLA+ Foundation (TLAF) is an independent, non-profit organization dedicated to fostering the adoption of the TLA+ specification language in industry, academia, and education, guided by the overall goal of advancing the mathematical thinking in software engineering. The TLAF funds development related to TLA+ to broaden its use and facilitate a thriving TLA+ community, encouraging cooperation among members of that community.
See the TLA+ Foundation Charter and the TLA+ Technical Charter for more details.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 15 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://foundation.tlapl.us/index.xml" rel="self" type="application/rss+xml"/><item><title>TLA+ Blog</title><link>https://foundation.tlapl.us/blog/index.html</link><pubDate>Fri, 15 Aug 2025 00:00:00 +0000</pubDate><guid>https://foundation.tlapl.us/blog/index.html</guid><description>August 2025 Monthly Development UpdateThis is the TLA‚Å∫ Foundation monthly development update (subscribe via RSS). Here we summarize the past month of development for the benefit of Foundation patrons and interested members of the community. We will also highlight a good bug or small feature for prospective new contributors to look at! If your TLA‚Å∫ contribution was missed, worry not - we publish monthly, so it‚Äôs easy to hop on the next train; open an issue here.</description></item><item><title>TLA+ Foundation Grants</title><link>https://foundation.tlapl.us/grants/index.html</link><pubDate>Tue, 28 May 2024 15:18:27 -0700</pubDate><guid>https://foundation.tlapl.us/grants/index.html</guid><description>TLA+ Foundation Grant Program Call for ProposalsThe 2025 TLA+ Foundation Grant Program is aimed at advancing the state of the art in the TLA+ specification and fostering the experience of using TLA+ in research and industry. Depending on the scope of proposed work, grants may range from USD$1000 to USD$100,000. Applicants who receive grants are expected to complete their work within one year, though exceptions may be made on a case-by-case basis.</description></item><item><title>Industrial Use of TLA‚Å∫</title><link>https://foundation.tlapl.us/industry/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://foundation.tlapl.us/industry/index.html</guid><description>Introduction Originally written by Leslie Lamport, sourced from here.
It‚Äôs hard to find out about the use of TLA‚Å∫ in industry. Companies usually don‚Äôt talk about their engineering process, and any specifications they write are almost always proprietary. I happened to have contacts at Intel and Amazon who were willing to describe how they used TLA‚Å∫, and Amazon even published a couple of papers about it. And of course, I know about much of the TLA‚Å∫ use at Microsoft. I learned about its use in building OpenComRTOS after its developers published a book about it. The Other Use section below describes a few smaller examples of TLA‚Å∫ use that I‚Äôve learned about.</description></item><item><title>GenAI-accelerated TLA+ challenge</title><link>https://foundation.tlapl.us/challenge/index.html</link><pubDate>Sat, 03 May 2025 00:00:00 +0000</pubDate><guid>https://foundation.tlapl.us/challenge/index.html</guid><description>üèÜ Announcement: Winners of the 2025 TLAi+ Challenge The TLA+ Foundation, in collaboration with NVIDIA, is pleased to announce the winners of the first GenAI-accelerated TLA+ Challenge‚Äîan open call for submissions showcasing creative and technically impressive work at the intersection of TLA+, formal methods, and AI-assisted development.
ü•á First Place ‚Äî Specula (Code ‚Üí Spec) Specula, developed by Qian Cheng, Dr. Tianyin Xu, and Dr. Yu Huang, is an open-source framework that automatically derives TLA+ specifications from source code and checks them against the implementation. It combines an LLM-based generator with a Control Flow Analyzer to ensure syntactic and structural correctness, then uses trace validation to semantically align the spec and the implementation. Demonstrated on etcd‚Äôs Raft (Go) and Asterinas‚Äôs SpinLock (Rust), Specula offers a reproducible path toward scaling automated specification to broader codebases and abstracting algorithmic intent.</description></item></channel></rss>